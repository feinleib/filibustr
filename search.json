[{"path":"https://feinleib.github.io/filibustr/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 filibustr authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://feinleib.github.io/filibustr/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Max Feinleib. Author, maintainer, copyright holder.","code":""},{"path":"https://feinleib.github.io/filibustr/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Feinleib M (2025). filibustr: Data Utilities Congressional Research. R package version 0.2.1.9000, https://feinleib.github.io/filibustr/, https://github.com/feinleib/filibustr.","code":"@Manual{,   title = {filibustr: Data Utilities for Congressional Research},   author = {Max Feinleib},   year = {2025},   note = {R package version 0.2.1.9000, https://feinleib.github.io/filibustr/},   url = {https://github.com/feinleib/filibustr}, }"},{"path":"https://feinleib.github.io/filibustr/index.html","id":"filibustr","dir":"","previous_headings":"","what":"Data Utilities for Congressional Research","title":"Data Utilities for Congressional Research","text":"filibustr package provides data utilities research U.S. Congress. package provides uniform interface accessing data sources Voteview, Legislative Effectiveness Scores, . Accessing data using functions removes many manual steps involved importing data. two primary benefits: Speeding workflow enabling quickly experiment variety data choices. Ensuring always --date data. filibustr inspired baseballr package, provides similar conveniences baseball analytics data.","code":""},{"path":"https://feinleib.github.io/filibustr/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Data Utilities for Congressional Research","text":"can install stable version filibustr CRAN : can install development version filibustr GitHub :","code":"install.packages(\"filibustr\") # install.packages(\"devtools\") devtools::install_github(\"feinleib/filibustr\")"},{"path":[]},{"path":"https://feinleib.github.io/filibustr/index.html","id":"voteview","dir":"","previous_headings":"Functions","what":"Voteview","title":"Data Utilities for Congressional Research","text":"four functions retrieve data Voteview: get_voteview_members(): data members (Presidents, Senators, Representatives). get_voteview_parties(): data parties (size ideology) get_voteview_rollcall_votes(): results recorded votes (overall results, positions individual members) get_voteview_member_votes(): individual members’ votes recorded votes functions share common interface arguments. Note: Especially working large datasets, reading data Voteview can take long time. repeatedly loading static dataset (.e., including information current Congress), may useful download dataset CSV/DTA file can read local file using local_path instead download data online. demonstration, table returned get_voteview_parties().","code":"library(filibustr)  get_voteview_parties() #> # A tibble: 845 × 9 #>    congress chamber   party_code party_name       n_members nominate_dim1_median #>       <int> <fct>          <int> <fct>                <int>                <dbl> #>  1        1 President       5000 Pro-Administrat…         1               NA     #>  2        1 House           4000 Anti-Administra…        29                0.018 #>  3        1 House           5000 Pro-Administrat…        31                0.576 #>  4        1 Senate          4000 Anti-Administra…         9               -0.238 #>  5        1 Senate          5000 Pro-Administrat…        20                0.427 #>  6        2 President       5000 Pro-Administrat…         1               NA     #>  7        2 House           4000 Anti-Administra…        32               -0.022 #>  8        2 House           5000 Pro-Administrat…        40                0.533 #>  9        2 Senate          4000 Anti-Administra…        14               -0.392 #> 10        2 Senate          5000 Pro-Administrat…        17                0.446 #> # ℹ 835 more rows #> # ℹ 3 more variables: nominate_dim2_median <dbl>, nominate_dim1_mean <dbl>, #> #   nominate_dim2_mean <dbl>"},{"path":"https://feinleib.github.io/filibustr/index.html","id":"legislative-effectiveness-scores","dir":"","previous_headings":"Functions","what":"Legislative Effectiveness Scores","title":"Data Utilities for Congressional Research","text":"function get_les() retrieves Legislative Effectiveness Scores data Center Effective Lawmaking. non-trivial differences House Senate datasets, take care joining House Senate data. example table returned get_les().","code":"library(filibustr)  get_les(chamber = \"senate\", les_2 = FALSE) #> # A tibble: 2,533 × 60 #>    last     first state congress cgnum icpsr  year dem   majority elected female #>    <chr>    <chr> <fct>    <int> <int> <int> <int> <lgl> <lgl>      <int> <lgl>  #>  1 Abourezk James SD          93     1 13000  1972 TRUE  TRUE        1972 FALSE  #>  2 Aiken    Geor… VT          93     2    52  1972 FALSE FALSE       1940 FALSE  #>  3 Allen    James AL          93     3 12100  1972 TRUE  TRUE        1968 FALSE  #>  4 Baker    Howa… TN          93     4 11200  1972 FALSE FALSE       1966 FALSE  #>  5 Bartlett Dewey OK          93     5 14100  1972 FALSE FALSE       1972 FALSE  #>  6 Bayh     Birch IN          93     6 10800  1972 TRUE  TRUE        1962 FALSE  #>  7 Beall    J.    MD          93     7 12002  1972 FALSE FALSE       1970 FALSE  #>  8 Bellmon  Henry OK          93     8 12101  1972 FALSE FALSE       1968 FALSE  #>  9 Bennett  Wall… UT          93     9   645  1972 FALSE FALSE       1950 FALSE  #> 10 Bentsen  Lloyd TX          93    10   660  1972 TRUE  TRUE        1970 FALSE  #> # ℹ 2,523 more rows #> # ℹ 49 more variables: afam <lgl>, latino <lgl>, votepct <int>, chair <lgl>, #> #   subchr <lgl>, seniority <int>, state_leg <lgl>, state_leg_prof <dbl>, #> #   maj_leader <lgl>, min_leader <lgl>, votepct_sq <int>, lagles <dbl>, #> #   power <lgl>, freshman <lgl>, sensq <int>, deleg_size <int>, #> #   party_code <int>, bioname <chr>, bioguide_id <chr>, born <int>, died <int>, #> #   dwnom1 <dbl>, dwnom2 <dbl>, meddist <dbl>, majdist <dbl>, cbill1 <int>, …"},{"path":"https://feinleib.github.io/filibustr/index.html","id":"harbridge-yong-volden-and-wiseman-2023","dir":"","previous_headings":"Functions","what":"Harbridge-Yong, Volden, and Wiseman (2023)","title":"Data Utilities for Congressional Research","text":"function get_hvw_data() retrives replication data Harbridge-Yong, Volden, Wiseman (2023). House Senate data number variables, variable names, trivial join two tables. tables returned get_hvw_data():","code":"library(filibustr)  get_hvw_data(\"house\") #> # A tibble: 9,825 × 109 #>    thomas_num thomas_name     icpsr congress  year st_name    cd dem   elected #>         <int> <chr>           <int>    <int> <int> <fct>   <int> <lgl>   <int> #>  1          1 Abdnor, James   14000       93  1973 SD          2 FALSE    1972 #>  2          2 Abzug, Bella    13001       93  1973 NY         20 TRUE     1970 #>  3          3 Adams, Brock    10700       93  1973 WA          7 TRUE     1964 #>  4          4 Addabbo, Joseph 10500       93  1973 NY          7 TRUE     1960 #>  5          5 Albert, Carl       NA       93  1973 OK          3 NA       1946 #>  6          6 Alexander, Bill 12000       93  1973 AR          1 TRUE     1968 #>  7          7 Anderson, John  10501       93  1973 IL         16 FALSE    1960 #>  8          8 Anderson, Glenn 12001       93  1973 CA         35 TRUE     1968 #>  9          9 Andrews, Ike    14001       93  1973 NC          4 TRUE     1972 #> 10         10 Andrews, Mark   10569       93  1973 ND          1 FALSE    1963 #> # ℹ 9,815 more rows #> # ℹ 100 more variables: female <lgl>, votepct <dbl>, dwnom1 <dbl>, #> #   deleg_size <int>, speaker <lgl>, subchr <lgl>, ss_bills <int>, #> #   ss_aic <int>, ss_abc <int>, ss_pass <int>, ss_law <int>, s_bills <int>, #> #   s_aic <int>, s_abc <int>, s_pass <int>, s_law <int>, c_bills <int>, #> #   c_aic <int>, c_abc <int>, c_pass <int>, c_law <int>, afam <lgl>, #> #   latino <lgl>, power <lgl>, budget <lgl>, chair <lgl>, state_leg <lgl>, … get_hvw_data(\"senate\") #> # A tibble: 2,228 × 104 #>    last  first state  cabc  caic cbill  claw cpass  sabc  saic sbill  slaw spass #>    <chr> <chr> <fct> <int> <int> <int> <int> <int> <int> <int> <int> <int> <int> #>  1 Grav… Mike  AK        0     0    17     0     0     2     0    48     0     1 #>  2 Stev… Ted   AK        0     0     9     0     0     6     0    71     3     6 #>  3 Allen James AL        0     0     5     0     0     2     0    14     0     1 #>  4 Spar… John  AL        1     0    23     0     1     7     0    62     0     7 #>  5 Fulb… James AR        0     0     0     0     0     9     0    31     3     8 #>  6 McCl… John  AR        0     0     3     0     0     3     0    20     1     2 #>  7 Fann… Paul  AZ        0     0     4     0     0     1     0    32     1     1 #>  8 Gold… Barry AZ        0     0     6     0     0     0     0    13     0     0 #>  9 Cran… Alan  CA        7     0    17     1     7     5     0    64     2     4 #> 10 Tunn… John  CA        0     0     1     0     0     4     0    35     0     1 #> # ℹ 2,218 more rows #> # ℹ 91 more variables: ssabc <int>, ssaic <int>, ssbill <int>, sslaw <int>, #> #   sspass <int>, congress <int>, cgnum <int>, icpsr <int>, year <int>, #> #   dem <lgl>, majority <lgl>, elected <int>, female <lgl>, afam <lgl>, #> #   latino <lgl>, votepct <dbl>, dwnom1 <dbl>, chair <lgl>, subchr <lgl>, #> #   seniority <int>, state_leg <lgl>, state_leg_prof <dbl>, maj_leader <lgl>, #> #   min_leader <lgl>, allbill <int>, allaic <int>, allabc <int>, …"},{"path":"https://feinleib.github.io/filibustr/index.html","id":"senategov","dir":"","previous_headings":"Functions","what":"Senate.gov","title":"Data Utilities for Congressional Research","text":"following functions retrieve data tables Senate.gov. get_senate_sessions(): start end dates legislative session Senate. (table link) get_senate_cloture_votes(): Senate actions cloture motions cloture votes. (table link) functions take arguments, always return full data table Senate website.","code":""},{"path":"https://feinleib.github.io/filibustr/index.html","id":"small-utilities","dir":"","previous_headings":"Functions","what":"Small utilities","title":"Data Utilities for Congressional Research","text":"package also provides smaller utility functions working congressional data. year_of_congress() returns starting year given Congress. congress_in_year() returns Congress number given year. current_congress() returns number current Congress, currently 119. current_congress() equivalent congress_in_year(Sys.Date()). get_voteview_cast_codes() returns key cast_code column get_voteview_member_votes(). read_html_table() general-use function reading HTML tables online. ’s nice shortcut common rvest workflow otherwise takes 3 functions. (’s powers Senate.gov functions!)","code":""},{"path":"https://feinleib.github.io/filibustr/index.html","id":"feedback-and-contributions","dir":"","previous_headings":"","what":"Feedback and contributions","title":"Data Utilities for Congressional Research","text":"notice bugs, suggestions new features, please submit issue Issues page package’s GitHub repository!","code":""},{"path":"https://feinleib.github.io/filibustr/index.html","id":"data-sources","dir":"","previous_headings":"","what":"Data sources","title":"Data Utilities for Congressional Research","text":"package uses data following websites research: Harbridge-Yong, L., Volden, C., & Wiseman, . E. (2023). Bipartisan Path Effective Lawmaking. Journal Politics, 85(3), 1048–1063. https://doi.org/10.1086/723805 Lewis, Jeffrey B., Keith Poole, Howard Rosenthal, Adam Boche, Aaron Rudkin, Luke Sonnet (2023). Voteview: Congressional Roll-Call Votes Database. https://voteview.com/ U.S. Senate. https://www.senate.gov/ Volden, C., & Wiseman, . E. (2023). Legislative Effectiveness Scores [dataset]. Center Effective Lawmaking. https://thelawmakers.org/","code":""},{"path":"https://feinleib.github.io/filibustr/reference/congress_in_year.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the Congress number of a given year — congress_in_year","title":"Calculate the Congress number of a given year — congress_in_year","text":"function gives number Congress specified calendar year.","code":""},{"path":"https://feinleib.github.io/filibustr/reference/congress_in_year.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the Congress number of a given year — congress_in_year","text":"","code":"congress_in_year(year)"},{"path":"https://feinleib.github.io/filibustr/reference/congress_in_year.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the Congress number of a given year — congress_in_year","text":"year Either number Date object. earlier 1789, year first Congress.","code":""},{"path":"https://feinleib.github.io/filibustr/reference/congress_in_year.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate the Congress number of a given year — congress_in_year","text":"positive whole number.","code":""},{"path":"https://feinleib.github.io/filibustr/reference/congress_in_year.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate the Congress number of a given year — congress_in_year","text":"new Congress begins every odd-numbered year, starting 1789. example, 2021-2022 117th Congress.","code":""},{"path":"https://feinleib.github.io/filibustr/reference/congress_in_year.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate the Congress number of a given year — congress_in_year","text":"","code":"congress_in_year(1800) #> [1] 6 congress_in_year(2022) #> [1] 117"},{"path":"https://feinleib.github.io/filibustr/reference/current_congress.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the current Congress number — current_congress","title":"Calculate the current Congress number — current_congress","text":"function gives number Congress current calendar year, using Sys.Date().","code":""},{"path":"https://feinleib.github.io/filibustr/reference/current_congress.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the current Congress number — current_congress","text":"","code":"current_congress()"},{"path":"https://feinleib.github.io/filibustr/reference/current_congress.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate the current Congress number — current_congress","text":"positive whole number.","code":""},{"path":"https://feinleib.github.io/filibustr/reference/current_congress.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate the current Congress number — current_congress","text":"new Congress begins every odd-numbered year, starting 1789. example, 2021-2022 117th Congress.","code":""},{"path":"https://feinleib.github.io/filibustr/reference/current_congress.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate the current Congress number — current_congress","text":"","code":"current_congress() #> [1] 119"},{"path":"https://feinleib.github.io/filibustr/reference/filibustr-package.html","id":null,"dir":"Reference","previous_headings":"","what":"filibustr: Data Utilities for Congressional Research — filibustr-package","title":"filibustr: Data Utilities for Congressional Research — filibustr-package","text":"Provides easy--understand consistent interfaces accessing data U.S. Congress. functions 'filibustr' streamline process importing data Congress R, removing need download work CSV files like. Data sources include 'Voteview' (https://voteview.com/), U.S. Senate website (https://www.senate.gov/), .","code":""},{"path":[]},{"path":"https://feinleib.github.io/filibustr/reference/filibustr-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"filibustr: Data Utilities for Congressional Research — filibustr-package","text":"Maintainer: Max Feinleib mhfeinleib@gmail.com (ORCID) [copyright holder]","code":""},{"path":"https://feinleib.github.io/filibustr/reference/get_hvw_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Get replication data from Harbridge-Yong, Volden, and Wiseman (2023) — get_hvw_data","title":"Get replication data from Harbridge-Yong, Volden, and Wiseman (2023) — get_hvw_data","text":"get_hvw_data() returns replication data : Harbridge-Yong, L., Volden, C., & Wiseman, . E. (2023). bipartisan path effective lawmaking. Journal Politics, 85(3), 1048–1063. doi:10.1086/723805","code":""},{"path":"https://feinleib.github.io/filibustr/reference/get_hvw_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get replication data from Harbridge-Yong, Volden, and Wiseman (2023) — get_hvw_data","text":"","code":"get_hvw_data(chamber, local_path = NULL)"},{"path":"https://feinleib.github.io/filibustr/reference/get_hvw_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get replication data from Harbridge-Yong, Volden, and Wiseman (2023) — get_hvw_data","text":"chamber chamber get data . Options : \"house\", \"h\", \"hr\": House data . \"senate\", \"s\", \"sen\": Senate data . options case-insensitive. argument results error. Note: Unlike Voteview functions, \"\" option. House Senate data number variables, variable names, trivial join two tables. must specify either House Senate data, since \"default\" option. local_path (Optional) file path reading local file. local_path specified,  read data Harvard Dataverse website.","code":""},{"path":"https://feinleib.github.io/filibustr/reference/get_hvw_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get replication data from Harbridge-Yong, Volden, and Wiseman (2023) — get_hvw_data","text":"tibble().","code":""},{"path":"https://feinleib.github.io/filibustr/reference/get_hvw_data.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get replication data from Harbridge-Yong, Volden, and Wiseman (2023) — get_hvw_data","text":"replication data available Harvard Dataverse. House Senate data come files HarbridgeYong_Volden_Wiseman_House_Replication.tab HarbridgeYong_Volden_Wiseman_Senate_Replication.tab, respectively. data spans 93rd 114th Congresses (1973-2016). datasets dedicated public domain CC0 1.0.","code":""},{"path":"https://feinleib.github.io/filibustr/reference/get_hvw_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get replication data from Harbridge-Yong, Volden, and Wiseman (2023) — get_hvw_data","text":"","code":"get_hvw_data(\"senate\") #> # A tibble: 2,228 × 104 #>    last  first state  cabc  caic cbill  claw cpass  sabc  saic sbill  slaw spass #>    <chr> <chr> <fct> <int> <int> <int> <int> <int> <int> <int> <int> <int> <int> #>  1 Grav… Mike  AK        0     0    17     0     0     2     0    48     0     1 #>  2 Stev… Ted   AK        0     0     9     0     0     6     0    71     3     6 #>  3 Allen James AL        0     0     5     0     0     2     0    14     0     1 #>  4 Spar… John  AL        1     0    23     0     1     7     0    62     0     7 #>  5 Fulb… James AR        0     0     0     0     0     9     0    31     3     8 #>  6 McCl… John  AR        0     0     3     0     0     3     0    20     1     2 #>  7 Fann… Paul  AZ        0     0     4     0     0     1     0    32     1     1 #>  8 Gold… Barry AZ        0     0     6     0     0     0     0    13     0     0 #>  9 Cran… Alan  CA        7     0    17     1     7     5     0    64     2     4 #> 10 Tunn… John  CA        0     0     1     0     0     4     0    35     0     1 #> # ℹ 2,218 more rows #> # ℹ 91 more variables: ssabc <int>, ssaic <int>, ssbill <int>, sslaw <int>, #> #   sspass <int>, congress <int>, cgnum <int>, icpsr <int>, year <int>, #> #   dem <lgl>, majority <lgl>, elected <int>, female <lgl>, afam <lgl>, #> #   latino <lgl>, votepct <dbl>, dwnom1 <dbl>, chair <lgl>, subchr <lgl>, #> #   seniority <int>, state_leg <lgl>, state_leg_prof <dbl>, maj_leader <lgl>, #> #   min_leader <lgl>, allbill <int>, allaic <int>, allabc <int>, … if (FALSE) { # interactive() get_hvw_data(\"house\") }"},{"path":"https://feinleib.github.io/filibustr/reference/get_les.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Legislative Effectiveness Scores data — get_les","title":"Get Legislative Effectiveness Scores data — get_les","text":"get_les() returns Legislative Effectiveness Scores data Center Effective Lawmaking.","code":""},{"path":"https://feinleib.github.io/filibustr/reference/get_les.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Legislative Effectiveness Scores data — get_les","text":"","code":"get_les(chamber, les_2 = FALSE, local_path = NULL)"},{"path":"https://feinleib.github.io/filibustr/reference/get_les.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Legislative Effectiveness Scores data — get_les","text":"chamber chamber get data . Options : \"house\", \"h\", \"hr\": House data . \"senate\", \"s\", \"sen\": Senate data . options case-insensitive. argument results error. Note: Unlike Voteview functions, \"\" option. must specify either House Senate data, since \"default\" option. non-trivial differences House Senate datasets, take care joining House Senate data. Important differences include: Legislator names formatted differently. Senate data first last name columns, House data single thomas_name column. year column refers first year Congress House data, year refers preceding election year Senate data. Thus, year House members one senators Congress. les_2 Whether use LES 2.0 (instead Classic Legislative Effectiveness Scores).  LES 2.0 credits lawmakers language sponsored bills included legislators' bills become law. LES 2.0 available 117th Congress. Classic LES available 93rd 117th Congresses. local_path (Optional) file path reading local file. local_path specified, read data Center Effective Lawmaking website.","code":""},{"path":"https://feinleib.github.io/filibustr/reference/get_les.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Legislative Effectiveness Scores data — get_les","text":"tibble().","code":""},{"path":"https://feinleib.github.io/filibustr/reference/get_les.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get Legislative Effectiveness Scores data — get_les","text":"See Center Effective Lawmaking website information data. Legislative Effectiveness Score methodology introduced : Volden, C., & Wiseman, . E. (2014). Legislative effectiveness United States Congress: lawmakers. Cambridge University Press. doi:10.1017/CBO9781139032360","code":""},{"path":"https://feinleib.github.io/filibustr/reference/get_les.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Legislative Effectiveness Scores data — get_les","text":"","code":"if (FALSE) { # interactive() # Classic LES data (93rd-117th Congresses) get_les(\"house\", les_2 = FALSE) get_les(\"senate\", les_2 = FALSE) } # LES 2.0 (117th Congress) get_les(\"house\", les_2 = TRUE) #> # A tibble: 454 × 60 #>    thomas_num thomas_name       icpsr congress  year st_name    cd dem   elected #>         <int> <chr>             <int>    <int> <int> <fct>   <int> <lgl>   <int> #>  1      10700 Adams, Alma       21545      117  2021 NC         12 TRUE     2014 #>  2      10701 Aderholt, Robert  29701      117  2021 AL          4 FALSE    1996 #>  3      10702 Aguilar, Pete     21506      117  2021 CA         31 TRUE     2014 #>  4      10703 Allen, Rick       21516      117  2021 GA         12 FALSE    2014 #>  5      10704 Allred, Colin     21900      117  2021 TX         32 TRUE     2018 #>  6      10705 Amodei, Mark      21196      117  2021 NV          2 FALSE    2011 #>  7      10706 Armstrong, Kelly  21901      117  2021 ND          1 FALSE    2018 #>  8      10707 Arrington, Jodey  21700      117  2021 TX         19 FALSE    2016 #>  9      10708 Auchincloss, Jake 22100      117  2021 MA          4 TRUE     2020 #> 10      10709 Axne, Cindy       21902      117  2021 IA          3 TRUE     2018 #> # ℹ 444 more rows #> # ℹ 51 more variables: female <lgl>, votepct <int>, dwnom1 <dbl>, dwnom2 <dbl>, #> #   deleg_size <int>, speaker <lgl>, subchr <lgl>, afam <lgl>, latino <lgl>, #> #   votepct_sq <int>, power <lgl>, chair <lgl>, state_leg <lgl>, #> #   state_leg_prof <dbl>, majority <lgl>, maj_leader <lgl>, min_leader <lgl>, #> #   meddist <dbl>, majdist <dbl>, leslag <dbl>, freshman <lgl>, #> #   seniority <int>, party_code <int>, bioname <chr>, bioguide_id <chr>, … get_les(\"senate\", les_2 = TRUE) #> # A tibble: 100 × 60 #>    last     first state congress cgnum icpsr  year dem   majority elected female #>    <chr>    <chr> <fct>    <int> <int> <int> <int> <lgl> <lgl>      <int> <lgl>  #>  1 Blunt    Roy   MO         117  2461 29735  2020 FALSE FALSE       2010 FALSE  #>  2 Brown    Sher… OH         117  2465 29389  2020 TRUE  TRUE        2006 FALSE  #>  3 Burr     Rich… NC         117  2466 29548  2020 FALSE FALSE       2004 FALSE  #>  4 Baldwin  Tammy WI         117  2456 29940  2020 TRUE  TRUE        2012 TRUE   #>  5 Boozman  John  AR         117  2463 20101  2020 FALSE FALSE       2010 FALSE  #>  6 Blackbu… Mars… TN         117  2459 20351  2020 FALSE FALSE       2018 TRUE   #>  7 Barrasso John  WY         117  2457 40707  2020 FALSE FALSE       2007 FALSE  #>  8 Bennet   Mich… CO         117  2458 40910  2020 TRUE  TRUE        2009 FALSE  #>  9 Blument… Rich… CT         117  2460 41101  2020 TRUE  TRUE        2010 FALSE  #> 10 Booker   Cory  NJ         117  2462 41308  2020 TRUE  TRUE        2013 FALSE  #> # ℹ 90 more rows #> # ℹ 49 more variables: afam <lgl>, latino <lgl>, votepct <int>, chair <lgl>, #> #   subchr <lgl>, seniority <int>, state_leg <lgl>, state_leg_prof <dbl>, #> #   maj_leader <lgl>, min_leader <lgl>, votepct_sq <int>, lagles <dbl>, #> #   power <lgl>, freshman <lgl>, sensq <int>, deleg_size <int>, #> #   party_code <int>, bioname <chr>, bioguide_id <chr>, born <int>, died <int>, #> #   dwnom1 <dbl>, dwnom2 <dbl>, meddist <dbl>, majdist <dbl>, cbill2 <int>, …"},{"path":"https://feinleib.github.io/filibustr/reference/get_senate_cloture_votes.html","id":null,"dir":"Reference","previous_headings":"","what":"Senate cloture motions and votes — get_senate_cloture_votes","title":"Senate cloture motions and votes — get_senate_cloture_votes","text":"get_senate_cloture_votes() returns tibble number cloture motions, cloture votes, successful cloture votes Senate Congress since 1917.","code":""},{"path":"https://feinleib.github.io/filibustr/reference/get_senate_cloture_votes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Senate cloture motions and votes — get_senate_cloture_votes","text":"","code":"get_senate_cloture_votes()"},{"path":"https://feinleib.github.io/filibustr/reference/get_senate_cloture_votes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Senate cloture motions and votes — get_senate_cloture_votes","text":"tibble() number cloture motions, cloture votes, successful cloture votes Congress.","code":""},{"path":"https://feinleib.github.io/filibustr/reference/get_senate_cloture_votes.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Senate cloture motions and votes — get_senate_cloture_votes","text":"data sourced official Senate website, specifically https://www.senate.gov/legislative/cloture/clotureCounts.htm.","code":""},{"path":"https://feinleib.github.io/filibustr/reference/get_senate_cloture_votes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Senate cloture motions and votes — get_senate_cloture_votes","text":"","code":"get_senate_cloture_votes() #> # A tibble: 55 × 5 #>    congress years     motions_filed votes_on_cloture cloture_invoked #>       <int> <chr>             <int>            <int>           <int> #>  1      119 2025-2026            49               46              43 #>  2      118 2023-2024           266              241             227 #>  3      117 2021-2022           336              289             270 #>  4      116 2019-2020           328              298             270 #>  5      115 2017-2018           201              168             157 #>  6      114 2015-2016           128              123              60 #>  7      113 2013-2014           252              218             187 #>  8      112 2011-2012           115               73              41 #>  9      111 2009-2010           137               91              63 #> 10      110 2007-2008           139              112              61 #> # ℹ 45 more rows"},{"path":"https://feinleib.github.io/filibustr/reference/get_senate_sessions.html","id":null,"dir":"Reference","previous_headings":"","what":"Start and end dates of Senate sessions — get_senate_sessions","title":"Start and end dates of Senate sessions — get_senate_sessions","text":"get_senate_sessions() returns tibble beginning (convening) ending (adjournment) dates legislative session Senate.","code":""},{"path":"https://feinleib.github.io/filibustr/reference/get_senate_sessions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Start and end dates of Senate sessions — get_senate_sessions","text":"","code":"get_senate_sessions()"},{"path":"https://feinleib.github.io/filibustr/reference/get_senate_sessions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Start and end dates of Senate sessions — get_senate_sessions","text":"tibble() begin_date adjourn_date session Senate.","code":""},{"path":"https://feinleib.github.io/filibustr/reference/get_senate_sessions.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Start and end dates of Senate sessions — get_senate_sessions","text":"data sourced official Senate website, specifically https://www.senate.gov/legislative/DatesofSessionsofCongress.htm. Senate sessions explained webpage provides explanation Senate sessions: Prior 74th Congress (1935-1937), first session Congress officially began March 4 odd-numbered years ended midnight March 3 odd-numbered years. Since 1935, accordance 20th Amendment Constitution, Congresses begun ended noon January 3 odd-numbered years. two-year Congress typically includes two legislative sessions, although third special sessions common earlier years. session column session column type factor, following levels:   Senate just 2 sessions Congress since 1941, just working recent data, convert column numeric. However, working pre-1941 data, likely dealing special sessions (denoted \"S\"), just numbered sessions.","code":"levels(get_senate_sessions()$session) #> [1] \"1\" \"2\" \"3\" \"4\" \"S\""},{"path":"https://feinleib.github.io/filibustr/reference/get_senate_sessions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Start and end dates of Senate sessions — get_senate_sessions","text":"","code":"get_senate_sessions() #> # A tibble: 309 × 4 #>    congress session begin_date adjourn_date #>       <int> <fct>   <date>     <date>       #>  1      119 1       2025-01-03 NA           #>  2      118 2       2024-01-03 2025-01-03   #>  3      118 1       2023-01-03 2024-01-03   #>  4      117 2       2022-01-03 2023-01-03   #>  5      117 1       2021-01-03 2022-01-03   #>  6      116 2       2020-01-03 2021-01-03   #>  7      116 1       2019-01-03 2020-01-03   #>  8      115 2       2018-01-03 2019-01-03   #>  9      115 1       2017-01-03 2018-01-03   #> 10      114 2       2016-01-04 2017-01-03   #> # ℹ 299 more rows"},{"path":"https://feinleib.github.io/filibustr/reference/get_voteview_cast_codes.html","id":null,"dir":"Reference","previous_headings":"","what":"Key to Voteview cast codes in individual member votes — get_voteview_cast_codes","title":"Key to Voteview cast codes in individual member votes — get_voteview_cast_codes","text":"get_voteview_cast_codes() returns tibble definitions 10 cast codes used Voteview's member votes data (.e., data get_voteview_member_votes()).","code":""},{"path":"https://feinleib.github.io/filibustr/reference/get_voteview_cast_codes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Key to Voteview cast codes in individual member votes — get_voteview_cast_codes","text":"","code":"get_voteview_cast_codes()"},{"path":"https://feinleib.github.io/filibustr/reference/get_voteview_cast_codes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Key to Voteview cast codes in individual member votes — get_voteview_cast_codes","text":"tibble().","code":""},{"path":"https://feinleib.github.io/filibustr/reference/get_voteview_cast_codes.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Key to Voteview cast codes in individual member votes — get_voteview_cast_codes","text":"information cast codes, visit Voteview's article member votes data.","code":""},{"path":[]},{"path":"https://feinleib.github.io/filibustr/reference/get_voteview_cast_codes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Key to Voteview cast codes in individual member votes — get_voteview_cast_codes","text":"","code":"get_voteview_cast_codes() #> # A tibble: 10 × 2 #>    cast_code vote_cast     #>        <int> <fct>         #>  1         0 Not a Member  #>  2         1 Yea           #>  3         2 Paired Yea    #>  4         3 Announced Yea #>  5         4 Announced Nay #>  6         5 Paired Nay    #>  7         6 Nay           #>  8         7 Present       #>  9         8 Present       #> 10         9 Not Voting"},{"path":"https://feinleib.github.io/filibustr/reference/get_voteview_member_votes.html","id":null,"dir":"Reference","previous_headings":"","what":"Get data on the votes of individual members of Congress — get_voteview_member_votes","title":"Get data on the votes of individual members of Congress — get_voteview_member_votes","text":"get_voteview_member_votes() returns tibble lists member Congress voted recorded (roll call) votes House Senate. Members identified ICPSR ID number, can use join additional member data get_voteview_members().","code":""},{"path":"https://feinleib.github.io/filibustr/reference/get_voteview_member_votes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get data on the votes of individual members of Congress — get_voteview_member_votes","text":"","code":"get_voteview_member_votes(chamber = \"all\", congress = NULL, local_path = NULL)"},{"path":"https://feinleib.github.io/filibustr/reference/get_voteview_member_votes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get data on the votes of individual members of Congress — get_voteview_member_votes","text":"chamber chamber get data . Options : \"\", \"congress\", \"hs\": House Senate data (default). \"house\", \"h\", \"hr\": House data . \"senate\", \"s\", \"sen\": Senate data . options case-insensitive. explicitly pass different value, default \"\" warning. congress (Optional) whole number (get data single Congress), numeric vector (get data set congresses). provided, retrieve data Congresses default. specified, Congress numbers greater current_congress() (.e., try get future data). local_path (Optional) file path reading local file. local_path specified, read data Voteview website.","code":""},{"path":"https://feinleib.github.io/filibustr/reference/get_voteview_member_votes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get data on the votes of individual members of Congress — get_voteview_member_votes","text":"tibble().","code":""},{"path":"https://feinleib.github.io/filibustr/reference/get_voteview_member_votes.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get data on the votes of individual members of Congress — get_voteview_member_votes","text":"See Voteview website information data. Please cite dataset : Lewis, Jeffrey B., Keith Poole, Howard Rosenthal, Adam Boche, Aaron Rudkin, Luke Sonnet (2025). Voteview: Congressional Roll-Call Votes Database. https://voteview.com/","code":""},{"path":[]},{"path":"https://feinleib.github.io/filibustr/reference/get_voteview_member_votes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get data on the votes of individual members of Congress — get_voteview_member_votes","text":"","code":"if (FALSE) { # interactive() get_voteview_member_votes()  # Get data for only one chamber get_voteview_member_votes(chamber = \"house\") get_voteview_member_votes(chamber = \"senate\")  # Get data for a specific Congress get_voteview_member_votes(congress = 110) get_voteview_member_votes(congress = current_congress()) } # Get data for a set of Congresses get_voteview_member_votes(congress = 1:3) #> # A tibble: 27,558 × 6 #>    congress chamber rollnumber icpsr cast_code  prob #>       <int> <fct>        <int> <int>     <int> <dbl> #>  1        1 House            1   154         6  61.1 #>  2        1 House            1   259         9  99.6 #>  3        1 House            1   379         1 100   #>  4        1 House            1   649         1  59.2 #>  5        1 House            1   786         1  97.7 #>  6        1 House            1   800         9  99.9 #>  7        1 House            1   878         6  14.4 #>  8        1 House            1   884         9  54.8 #>  9        1 House            1  1118         9  99.9 #> 10        1 House            1  1260         1  99.9 #> # ℹ 27,548 more rows"},{"path":"https://feinleib.github.io/filibustr/reference/get_voteview_members.html","id":null,"dir":"Reference","previous_headings":"","what":"Get data on members of Congress from Voteview — get_voteview_members","title":"Get data on members of Congress from Voteview — get_voteview_members","text":"get_voteview_members() returns tibble data members Congress, sourced Voteview. Members data include Senators, Representatives, Presidents. row one member one Congress (.e., member listed every two years office).","code":""},{"path":"https://feinleib.github.io/filibustr/reference/get_voteview_members.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get data on members of Congress from Voteview — get_voteview_members","text":"","code":"get_voteview_members(chamber = \"all\", congress = NULL, local_path = NULL)"},{"path":"https://feinleib.github.io/filibustr/reference/get_voteview_members.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get data on members of Congress from Voteview — get_voteview_members","text":"chamber (Optional) chamber get data . Options : \"\", \"congress\", \"hs\": House Senate data (default). \"house\", \"h\", \"hr\": House data . \"senate\", \"s\", \"sen\": Senate data . options case-insensitive. explicitly pass different value, default \"\" warning. Note presidents included datasets. Therefore, reading \"house\" \"senate\" data duplicate data presidents. recommended way get data use default argument, \"\". congress (Optional) whole number (get data single Congress), numeric vector (get data set congresses). provided, retrieve data Congresses default. specified, Congress numbers greater current_congress() (.e., try get future data). local_path (Optional) file path reading local file. local_path specified, read data Voteview website.","code":""},{"path":"https://feinleib.github.io/filibustr/reference/get_voteview_members.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get data on members of Congress from Voteview — get_voteview_members","text":"tibble(). tibble includes data member's office, party, ideology. See Voteview descriptions specific columns.","code":""},{"path":"https://feinleib.github.io/filibustr/reference/get_voteview_members.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get data on members of Congress from Voteview — get_voteview_members","text":"See Voteview website information data. Please cite dataset : Lewis, Jeffrey B., Keith Poole, Howard Rosenthal, Adam Boche, Aaron Rudkin, Luke Sonnet (2025). Voteview: Congressional Roll-Call Votes Database. https://voteview.com/","code":""},{"path":"https://feinleib.github.io/filibustr/reference/get_voteview_members.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get data on members of Congress from Voteview — get_voteview_members","text":"","code":"if (FALSE) { # interactive() get_voteview_members()  # Get data for only one chamber # NOTE: the President is included in all data get_voteview_members(chamber = \"house\") get_voteview_members(chamber = \"senate\") } # Get data for a specific Congress get_voteview_members(congress = 100) #> # A tibble: 543 × 22 #>    congress chamber   icpsr state_icpsr district_code state_abbrev party_code #>       <int> <fct>     <int>       <int>         <int> <fct>             <int> #>  1      100 President 99907          99             0 USA                 200 #>  2      100 House     10717          41             2 AL                  200 #>  3      100 House     11000          41             4 AL                  100 #>  4      100 House     11037          41             3 AL                  100 #>  5      100 House     14419          41             5 AL                  100 #>  6      100 House     15022          41             6 AL                  100 #>  7      100 House     15090          41             1 AL                  200 #>  8      100 House     15416          41             7 AL                  100 #>  9      100 House     14066          81             1 AK                  200 #> 10      100 House     10566          61             2 AZ                  100 #> # ℹ 533 more rows #> # ℹ 15 more variables: occupancy <int>, last_means <int>, bioname <chr>, #> #   bioguide_id <chr>, born <int>, died <int>, nominate_dim1 <dbl>, #> #   nominate_dim2 <dbl>, nominate_log_likelihood <dbl>, #> #   nominate_geo_mean_probability <dbl>, nominate_number_of_votes <int>, #> #   nominate_number_of_errors <int>, conditional <lgl>, #> #   nokken_poole_dim1 <dbl>, nokken_poole_dim2 <dbl> get_voteview_members(congress = current_congress()) #> # A tibble: 536 × 22 #>    congress chamber icpsr state_icpsr district_code state_abbrev party_code #>       <int> <fct>   <int>       <int>         <int> <fct>             <int> #>  1      119 House   20301          41             3 AL                  200 #>  2      119 House   21102          41             7 AL                  100 #>  3      119 House   21500          41             6 AL                  200 #>  4      119 House   22140          41             1 AL                  200 #>  5      119 House   22366          41             5 AL                  200 #>  6      119 House   22515          41             2 AL                  100 #>  7      119 House   29701          41             4 AL                  200 #>  8      119 House   22503          81             1 AK                  200 #>  9      119 House   20305          61             7 AZ                  100 #> 10      119 House   21103          61             9 AZ                  200 #> # ℹ 526 more rows #> # ℹ 15 more variables: occupancy <int>, last_means <int>, bioname <chr>, #> #   bioguide_id <chr>, born <int>, died <int>, nominate_dim1 <dbl>, #> #   nominate_dim2 <dbl>, nominate_log_likelihood <dbl>, #> #   nominate_geo_mean_probability <dbl>, nominate_number_of_votes <int>, #> #   nominate_number_of_errors <int>, conditional <lgl>, #> #   nokken_poole_dim1 <dbl>, nokken_poole_dim2 <dbl>  if (FALSE) { # interactive() # Get data for a set of Congresses get_voteview_members(congress = 1:10) }"},{"path":"https://feinleib.github.io/filibustr/reference/get_voteview_parties.html","id":null,"dir":"Reference","previous_headings":"","what":"Get data on congressional parties from Voteview — get_voteview_parties","title":"Get data on congressional parties from Voteview — get_voteview_parties","text":"get_voteview_parties() returns tibble information parties (aka caucuses) Congress. party information includes party's ICPSR code, number members, DW-NOMINATE scores. parties President, Senate, House listed data. row one party one chamber Congress (.e., party listed every two years).","code":""},{"path":"https://feinleib.github.io/filibustr/reference/get_voteview_parties.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get data on congressional parties from Voteview — get_voteview_parties","text":"","code":"get_voteview_parties(chamber = \"all\", congress = NULL, local_path = NULL)"},{"path":"https://feinleib.github.io/filibustr/reference/get_voteview_parties.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get data on congressional parties from Voteview — get_voteview_parties","text":"chamber (Optional) chamber get data . Options : \"\", \"congress\", \"hs\": House Senate data (default). \"house\", \"h\", \"hr\": House data . \"senate\", \"s\", \"sen\": Senate data . options case-insensitive. explicitly pass different value, default \"\" warning. Note presidents included datasets. Therefore, reading \"house\" \"senate\" data duplicate data presidents. recommended way get data use default argument, \"\". congress (Optional) whole number (get data single Congress), numeric vector (get data set congresses). provided, retrieve data Congresses default. specified, Congress numbers greater current_congress() (.e., try get future data). local_path (Optional) file path reading local file. local_path specified, read data Voteview website.","code":""},{"path":"https://feinleib.github.io/filibustr/reference/get_voteview_parties.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get data on congressional parties from Voteview — get_voteview_parties","text":"tibble().","code":""},{"path":"https://feinleib.github.io/filibustr/reference/get_voteview_parties.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get data on congressional parties from Voteview — get_voteview_parties","text":"See Voteview website information data. Please cite dataset : Lewis, Jeffrey B., Keith Poole, Howard Rosenthal, Adam Boche, Aaron Rudkin, Luke Sonnet (2025). Voteview: Congressional Roll-Call Votes Database. https://voteview.com/","code":""},{"path":"https://feinleib.github.io/filibustr/reference/get_voteview_parties.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get data on congressional parties from Voteview — get_voteview_parties","text":"","code":"if (FALSE) { # interactive() get_voteview_parties()  # get parties for only one chamber # NOTE: the President is included in all data get_voteview_parties(chamber = \"house\") get_voteview_parties(chamber = \"senate\") } # get parties for a specific Congress get_voteview_parties(congress = 100) #> # A tibble: 5 × 9 #>   congress chamber   party_code party_name n_members nominate_dim1_median #>      <int> <fct>          <int> <fct>          <int>                <dbl> #> 1      100 President        200 Republican         1                0.692 #> 2      100 House            100 Democrat         262               -0.32  #> 3      100 House            200 Republican       179                0.346 #> 4      100 Senate           100 Democrat          55               -0.313 #> 5      100 Senate           200 Republican        46                0.302 #> # ℹ 3 more variables: nominate_dim2_median <dbl>, nominate_dim1_mean <dbl>, #> #   nominate_dim2_mean <dbl> get_voteview_parties(congress = current_congress()) #> # A tibble: 5 × 9 #>   congress chamber party_code party_name  n_members nominate_dim1_median #>      <int> <fct>        <int> <fct>           <int>                <dbl> #> 1      119 House          100 Democrat          215               -0.394 #> 2      119 House          200 Republican        219                0.511 #> 3      119 Senate         100 Democrat           45               -0.353 #> 4      119 Senate         200 Republican         55                0.557 #> 5      119 Senate         328 Independent         2               -0.356 #> # ℹ 3 more variables: nominate_dim2_median <dbl>, nominate_dim1_mean <dbl>, #> #   nominate_dim2_mean <dbl>  if (FALSE) { # interactive() # get parties for a set of Congresses get_voteview_parties(congress = 1:10) }"},{"path":"https://feinleib.github.io/filibustr/reference/get_voteview_rollcall_votes.html","id":null,"dir":"Reference","previous_headings":"","what":"Get data on congressional roll call votes from Voteview — get_voteview_rollcall_votes","title":"Get data on congressional roll call votes from Voteview — get_voteview_rollcall_votes","text":"get_voteview_rollcall_votes() returns tibble information recorded (roll call) votes House Senate.","code":""},{"path":"https://feinleib.github.io/filibustr/reference/get_voteview_rollcall_votes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get data on congressional roll call votes from Voteview — get_voteview_rollcall_votes","text":"","code":"get_voteview_rollcall_votes(   chamber = \"all\",   congress = NULL,   local_path = NULL )"},{"path":"https://feinleib.github.io/filibustr/reference/get_voteview_rollcall_votes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get data on congressional roll call votes from Voteview — get_voteview_rollcall_votes","text":"chamber chamber get data . Options : \"\", \"congress\", \"hs\": House Senate data (default). \"house\", \"h\", \"hr\": House data . \"senate\", \"s\", \"sen\": Senate data . options case-insensitive. explicitly pass different value, default \"\" warning. congress (Optional) whole number (get data single Congress), numeric vector (get data set congresses). provided, retrieve data Congresses default. specified, Congress numbers greater current_congress() (.e., try get future data). local_path (Optional) file path reading local file. local_path specified, read data Voteview website.","code":""},{"path":"https://feinleib.github.io/filibustr/reference/get_voteview_rollcall_votes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get data on congressional roll call votes from Voteview — get_voteview_rollcall_votes","text":"tibble().","code":""},{"path":"https://feinleib.github.io/filibustr/reference/get_voteview_rollcall_votes.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get data on congressional roll call votes from Voteview — get_voteview_rollcall_votes","text":"See Voteview website information data. Please cite dataset : Lewis, Jeffrey B., Keith Poole, Howard Rosenthal, Adam Boche, Aaron Rudkin, Luke Sonnet (2025). Voteview: Congressional Roll-Call Votes Database. https://voteview.com/","code":""},{"path":"https://feinleib.github.io/filibustr/reference/get_voteview_rollcall_votes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get data on congressional roll call votes from Voteview — get_voteview_rollcall_votes","text":"","code":"if (FALSE) { # interactive() get_voteview_rollcall_votes()  # Get data for only one chamber # NOTE: the President is included in all data get_voteview_rollcall_votes(chamber = \"house\") get_voteview_rollcall_votes(chamber = \"senate\") } # Get data for a specific Congress get_voteview_rollcall_votes(congress = 100) #> # A tibble: 1,738 × 18 #>    congress chamber rollnumber date       session clerk_rollnumber yea_count #>       <int> <fct>        <int> <date>       <int>            <int>     <int> #>  1      100 House            1 1987-01-06      NA               NA       254 #>  2      100 House            2 1987-01-06      NA               NA       236 #>  3      100 House            3 1987-01-06      NA               NA       175 #>  4      100 House            4 1987-01-06      NA               NA       245 #>  5      100 House            5 1987-01-07      NA               NA       416 #>  6      100 House            6 1987-01-08      NA               NA       286 #>  7      100 House            7 1987-01-08      NA               NA       406 #>  8      100 House            8 1987-01-08      NA               NA       312 #>  9      100 House            9 1987-01-21      NA               NA       319 #> 10      100 House           10 1987-01-21      NA               NA       331 #> # ℹ 1,728 more rows #> # ℹ 11 more variables: nay_count <int>, nominate_mid_1 <dbl>, #> #   nominate_mid_2 <dbl>, nominate_spread_1 <dbl>, nominate_spread_2 <dbl>, #> #   nominate_log_likelihood <dbl>, bill_number <chr>, vote_result <chr>, #> #   vote_desc <chr>, vote_question <chr>, dtl_desc <chr> get_voteview_rollcall_votes(congress = current_congress()) #> # A tibble: 205 × 18 #>    congress chamber rollnumber date       session clerk_rollnumber yea_count #>       <int> <fct>        <int> <date>       <int>            <int>     <int> #>  1      119 House            1 2025-01-03       1                2       218 #>  2      119 House            2 2025-01-03       1                3       216 #>  3      119 House            3 2025-01-03       1                4       209 #>  4      119 House            4 2025-01-03       1                5       215 #>  5      119 House            5 2025-01-07       1                6       264 #>  6      119 House            6 2025-01-09       1                7       243 #>  7      119 House            7 2025-01-13       1                8       407 #>  8      119 House            8 2025-01-13       1                9       405 #>  9      119 House            9 2025-01-14       1               10       426 #> 10      119 House           10 2025-01-14       1               11       208 #> # ℹ 195 more rows #> # ℹ 11 more variables: nay_count <int>, nominate_mid_1 <dbl>, #> #   nominate_mid_2 <dbl>, nominate_spread_1 <dbl>, nominate_spread_2 <dbl>, #> #   nominate_log_likelihood <dbl>, bill_number <chr>, vote_result <chr>, #> #   vote_desc <chr>, vote_question <chr>, dtl_desc <chr>  if (FALSE) { # interactive() # Get data for a set of Congresses get_voteview_rollcall_votes(congress = 1:10) }"},{"path":"https://feinleib.github.io/filibustr/reference/read_html_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Scrape an online HTML table — read_html_table","title":"Scrape an online HTML table — read_html_table","text":"read_html_table() returns HTML table specified URL CSS element dataframe.","code":""},{"path":"https://feinleib.github.io/filibustr/reference/read_html_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Scrape an online HTML table — read_html_table","text":"","code":"read_html_table(url, css)"},{"path":"https://feinleib.github.io/filibustr/reference/read_html_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Scrape an online HTML table — read_html_table","text":"url string giving URL read . css string giving CSS element select. SelectorGadget (https://selectorgadget.com/) useful tool finding code CSS element need. See rvest::html_element() information.","code":""},{"path":"https://feinleib.github.io/filibustr/reference/read_html_table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Scrape an online HTML table — read_html_table","text":"tibble().","code":""},{"path":"https://feinleib.github.io/filibustr/reference/read_html_table.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Scrape an online HTML table — read_html_table","text":"","code":"# The table used in `get_senate_cloture_votes()` # NOTE: `get_senate_cloture_votes()` performs some cleaning on this table read_html_table(url = \"https://www.senate.gov/legislative/cloture/clotureCounts.htm\",                 css = \".cloturecount\") #> # A tibble: 56 × 5 #>    Congress Years     `Motions Filed` `Votes on Cloture` `Cloture Invoked` #>    <chr>    <chr>     <chr>           <chr>              <chr>             #>  1 119      2025-2026 49              46                 43                #>  2 118      2023-2024 266             241                227               #>  3 117      2021-2022 336             289                270               #>  4 116      2019-2020 328             298                270               #>  5 115      2017-2018 201             168                157               #>  6 114      2015-2016 128             123                60                #>  7 113      2013-2014 252             218                187               #>  8 112      2011-2012 115             73                 41                #>  9 111      2009-2010 137             91                 63                #> 10 110      2007-2008 139             112                61                #> # ℹ 46 more rows  # A table from Baseball Reference read_html_table(url = \"https://www.baseball-reference.com/friv/rules-changes-stats.shtml\",                 css = \"#time_of_game\") #> # A tibble: 44 × 8 #>    Year         G AvgTime `%≤2:30` `%≥3:30` `Avg Tm Btwn PA` `Avg Tm Btwn BIP` #>    <chr>    <int> <chr>      <dbl>    <dbl> <chr>            <chr>             #>  1 2025-Mar    22 2:40        27.3      0   2:10             3:26              #>  2 2024-Mar    49 2:42        28.6      2   2:07             3:15              #>  3 2023-Mar    20 2:42        30        5   2:09             3:25              #>  4 2024-Apr   358 2:35        39.1      0   2:06             3:09              #>  5 2024-May   367 2:33        42.2      0.3 2:06             3:05              #>  6 2023-Apr   374 2:36        35        0.3 2:05             3:10              #>  7 2023-May   382 2:37        33.2      0   2:07             3:09              #>  8 2024-Jun   370 2:35        41.4      0.3 2:06             3:06              #>  9 2023-Jun   354 2:39        31.9      0.3 2:08             3:12              #> 10 2024-Jul   337 2:37        36.2      0   2:06             3:08              #> # ℹ 34 more rows #> # ℹ 1 more variable: `Pos.Pitcher %` <chr>"},{"path":"https://feinleib.github.io/filibustr/reference/year_of_congress.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the starting year of a Congress — year_of_congress","title":"Get the starting year of a Congress — year_of_congress","text":"function gives first year specified Congress number.","code":""},{"path":"https://feinleib.github.io/filibustr/reference/year_of_congress.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the starting year of a Congress — year_of_congress","text":"","code":"year_of_congress(congress)"},{"path":"https://feinleib.github.io/filibustr/reference/year_of_congress.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the starting year of a Congress — year_of_congress","text":"congress positive whole number.","code":""},{"path":"https://feinleib.github.io/filibustr/reference/year_of_congress.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the starting year of a Congress — year_of_congress","text":"positive whole number, representing first year given Congress. year always odd number.","code":""},{"path":"https://feinleib.github.io/filibustr/reference/year_of_congress.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get the starting year of a Congress — year_of_congress","text":"new Congress begins every odd-numbered year, starting 1789. example, 2021-2022 117th Congress.","code":""},{"path":"https://feinleib.github.io/filibustr/reference/year_of_congress.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the starting year of a Congress — year_of_congress","text":"","code":"year_of_congress(1) #> [1] 1789 year_of_congress(118) #> [1] 2023"},{"path":[]},{"path":"https://feinleib.github.io/filibustr/news/index.html","id":"breaking-changes-development-version","dir":"Changelog","previous_headings":"","what":"Breaking changes","title":"filibustr (development version)","text":"given function call now read data either online local file, try . longer “online fallback” local file found. Filtering local files: working local files, can download one big file, filter file smaller datasets needed - need make multiple slow downloads! supported file types local reading : .csv, .dta, .tab, .tsv example usage local_path argument, including ability filter local files: Voteview functions, invalid congress now produces error, instead silently returning data Congresses. NOTE: state abbreviations (columns state, st_name) LES scores relative expectation (columns expectation, expectation1, expectation2) now factor variables. get_voteview_members(): fix factor levels state_abbrev column. get_les(), 0- 1-character strings bioname converted NA.","code":"## download large dataset all_members <- get_voteview_members() nrow(all_members)                       # 51036 levels(all_members$chamber)             # \"President\" \"House\"     \"Senate\" range(all_members$congress)             # 1 119 (or the `current_congress()`)  ## save to local file tmp_csv <- tempfile(fileext = \".csv\") readr::write_csv(all_members, tmp_csv)  ## read data from local file - much faster than downloading from online! local_members <- get_voteview_members(local_path = tmp_csv) nrow(local_members)                     # 51036  ## read smaller datasets from the local file senators <- get_voteview_members(chamber = \"sen\", local_path = tmp_csv) nrow(senators)                          # 10125 levels(senators$chamber)                # \"President\" \"Senate\"  congresses_100_to_110 <- get_voteview_members(congress = 100:110,                                                local_path = tmp_csv) nrow(congresses_100_to_110)             # 6008 range(congresses_100_to_110$congress)   # 100 110  house_117 <- get_voteview_members(chamber = \"hr\", congress = 117,                                   local_path = tmp_csv) nrow(house_117)                         # 457 levels(house_117$chamber)               # \"President\" \"House\" range(house_117$congress)               # 117 117"},{"path":"https://feinleib.github.io/filibustr/news/index.html","id":"new-features-development-version","dir":"Changelog","previous_headings":"","what":"New features","title":"filibustr (development version)","text":"New get_voteview_cast_codes() provides cast codes used Voteview’s member votes data (#13). New read_html_table() reading HTML tables online. ’s nice shortcut common {rvest} workflow otherwise takes 3 functions. read_html_table() previously internal function, ’s useful enough think exported, even ’s core functionality {filibustr} (#20).","code":""},{"path":"https://feinleib.github.io/filibustr/news/index.html","id":"minor-improvements-and-bug-fixes-development-version","dir":"Changelog","previous_headings":"","what":"Minor improvements and bug fixes","title":"filibustr (development version)","text":"Improved error messages cli::cli_abort() (#9). reading data online, now retry 3 times case HTTP errors. Fixes online tests CRAN. Removed dependencies: {crul}, {R.utils}, {tidyselect}. New dependencies: {cli}, {tools}.","code":""},{"path":"https://feinleib.github.io/filibustr/news/index.html","id":"filibustr-021-2024-05-02","dir":"Changelog","previous_headings":"","what":"filibustr 0.2.1 (2024-05-02)","title":"filibustr 0.2.1 (2024-05-02)","text":"CRAN release: 2024-05-02","code":""},{"path":"https://feinleib.github.io/filibustr/news/index.html","id":"bug-fixes-0-2-1","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"filibustr 0.2.1 (2024-05-02)","text":"Handle HTTP errors using online connections (#12).","code":""},{"path":"https://feinleib.github.io/filibustr/news/index.html","id":"filibustr-020-2024-03-01","dir":"Changelog","previous_headings":"","what":"filibustr 0.2.0 (2024-03-01)","title":"filibustr 0.2.0 (2024-03-01)","text":"CRAN release: 2024-03-01","code":""},{"path":"https://feinleib.github.io/filibustr/news/index.html","id":"breaking-changes-0-2-0","dir":"Changelog","previous_headings":"","what":"Breaking changes","title":"filibustr 0.2.0 (2024-03-01)","text":"get_lhy_data() renamed get_hvw_data(). get_voteview_*(), chamber congress now come local local_dir. matches argument order get_hvw_data() (#3).","code":""},{"path":"https://feinleib.github.io/filibustr/news/index.html","id":"new-features-0-2-0","dir":"Changelog","previous_headings":"","what":"New features","title":"filibustr 0.2.0 (2024-03-01)","text":"New function get_les() retrieves Legislative Effectiveness Scores data Center Effective Lawmaking (#5).","code":""},{"path":"https://feinleib.github.io/filibustr/news/index.html","id":"filibustr-011-2024-02-13","dir":"Changelog","previous_headings":"","what":"filibustr 0.1.1 (2024-02-13)","title":"filibustr 0.1.1 (2024-02-13)","text":"CRAN release: 2024-02-13 Fixes CRAN.","code":""},{"path":"https://feinleib.github.io/filibustr/news/index.html","id":"filibustr-010-2024-02-01","dir":"Changelog","previous_headings":"","what":"filibustr 0.1.0 (2024-02-01)","title":"filibustr 0.1.0 (2024-02-01)","text":"Initial CRAN submission.","code":""}]
